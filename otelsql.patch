diff --git a/config.go b/config.go
index f30e6ba..1429bb1 100644
--- a/config.go
+++ b/config.go
@@ -42,7 +42,7 @@ type SpanNameFormatter interface {
 
 type config struct {
 	TracerProvider trace.TracerProvider
-	Tracer         trace.Tracer
+	Tracer         func() trace.Tracer
 
 	MeterProvider metric.MeterProvider
 	Meter         metric.Meter
@@ -118,10 +118,12 @@ func newConfig(options ...Option) config {
 		opt.Apply(&cfg)
 	}
 
-	cfg.Tracer = cfg.TracerProvider.Tracer(
-		instrumentationName,
-		trace.WithInstrumentationVersion(Version()),
-	)
+	cfg.Tracer = func() trace.Tracer {
+		return cfg.TracerProvider.Tracer(
+			instrumentationName,
+			trace.WithInstrumentationVersion(Version()),
+		)
+	}
 	cfg.Meter = cfg.MeterProvider.Meter(
 		instrumentationName,
 		metric.WithInstrumentationVersion(Version()),
diff --git a/conn.go b/conn.go
index 61afe54..c751b56 100644
--- a/conn.go
+++ b/conn.go
@@ -60,7 +60,7 @@ func (c *otConn) Ping(ctx context.Context) (err error) {
 
 	if c.cfg.SpanOptions.Ping {
 		var span trace.Span
-		ctx, span = c.cfg.Tracer.Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
+		ctx, span = c.cfg.Tracer().Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
 			trace.WithSpanKind(trace.SpanKindClient),
 			trace.WithAttributes(c.cfg.Attributes...),
 		)
@@ -97,7 +97,7 @@ func (c *otConn) ExecContext(ctx context.Context, query string, args []driver.Na
 	}()
 
 	var span trace.Span
-	ctx, span = c.cfg.Tracer.Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, query),
+	ctx, span = c.cfg.Tracer().Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, query),
 		trace.WithSpanKind(trace.SpanKindClient),
 		trace.WithAttributes(withDBStatement(c.cfg, query)...),
 	)
@@ -134,7 +134,7 @@ func (c *otConn) QueryContext(ctx context.Context, query string, args []driver.N
 	var span trace.Span
 	queryCtx := ctx
 	if !c.cfg.SpanOptions.OmitConnQuery {
-		queryCtx, span = c.cfg.Tracer.Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, query),
+		queryCtx, span = c.cfg.Tracer().Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, query),
 			trace.WithSpanKind(trace.SpanKindClient),
 			trace.WithAttributes(withDBStatement(c.cfg, query)...),
 		)
@@ -163,7 +163,7 @@ func (c *otConn) PrepareContext(ctx context.Context, query string) (stmt driver.
 
 	var span trace.Span
 	if !c.cfg.SpanOptions.OmitConnPrepare {
-		ctx, span = c.cfg.Tracer.Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, query),
+		ctx, span = c.cfg.Tracer().Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, query),
 			trace.WithSpanKind(trace.SpanKindClient),
 			trace.WithAttributes(withDBStatement(c.cfg, query)...),
 		)
@@ -190,7 +190,7 @@ func (c *otConn) BeginTx(ctx context.Context, opts driver.TxOptions) (tx driver.
 		onDefer(err)
 	}()
 
-	beginTxCtx, span := c.cfg.Tracer.Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
+	beginTxCtx, span := c.cfg.Tracer().Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
 		trace.WithSpanKind(trace.SpanKindClient),
 		trace.WithAttributes(c.cfg.Attributes...),
 	)
@@ -218,7 +218,7 @@ func (c *otConn) ResetSession(ctx context.Context) (err error) {
 
 	var span trace.Span
 	if !c.cfg.SpanOptions.OmitConnResetSession {
-		ctx, span = c.cfg.Tracer.Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
+		ctx, span = c.cfg.Tracer().Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
 			trace.WithSpanKind(trace.SpanKindClient),
 			trace.WithAttributes(c.cfg.Attributes...),
 		)
diff --git a/connector.go b/connector.go
index a578a6d..badf0d5 100644
--- a/connector.go
+++ b/connector.go
@@ -46,7 +46,7 @@ func (c *otConnector) Connect(ctx context.Context) (connection driver.Conn, err
 
 	var span trace.Span
 	if !c.cfg.SpanOptions.OmitConnectorConnect {
-		ctx, span = c.cfg.Tracer.Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
+		ctx, span = c.cfg.Tracer().Start(ctx, c.cfg.SpanNameFormatter.Format(ctx, method, ""),
 			trace.WithSpanKind(trace.SpanKindClient),
 			trace.WithAttributes(c.cfg.Attributes...),
 		)
diff --git a/rows.go b/rows.go
index 7e691a5..6937bf3 100644
--- a/rows.go
+++ b/rows.go
@@ -46,7 +46,7 @@ func newRows(ctx context.Context, rows driver.Rows, cfg config) *otRows {
 	onClose := recordMetric(ctx, cfg.Instruments, cfg.Attributes, method)
 
 	if !cfg.SpanOptions.OmitRows {
-		_, span = cfg.Tracer.Start(ctx, cfg.SpanNameFormatter.Format(ctx, method, ""),
+		_, span = cfg.Tracer().Start(ctx, cfg.SpanNameFormatter.Format(ctx, method, ""),
 			trace.WithSpanKind(trace.SpanKindClient),
 			trace.WithAttributes(cfg.Attributes...),
 		)
diff --git a/stmt.go b/stmt.go
index 018af81..209bf55 100644
--- a/stmt.go
+++ b/stmt.go
@@ -56,7 +56,7 @@ func (s *otStmt) ExecContext(ctx context.Context, args []driver.NamedValue) (res
 	}()
 
 	var span trace.Span
-	ctx, span = s.cfg.Tracer.Start(ctx, s.cfg.SpanNameFormatter.Format(ctx, method, s.query),
+	ctx, span = s.cfg.Tracer().Start(ctx, s.cfg.SpanNameFormatter.Format(ctx, method, s.query),
 		trace.WithSpanKind(trace.SpanKindClient),
 		trace.WithAttributes(withDBStatement(s.cfg, s.query)...),
 	)
@@ -82,7 +82,7 @@ func (s *otStmt) QueryContext(ctx context.Context, args []driver.NamedValue) (ro
 		onDefer(err)
 	}()
 
-	queryCtx, span := s.cfg.Tracer.Start(ctx, s.cfg.SpanNameFormatter.Format(ctx, method, s.query),
+	queryCtx, span := s.cfg.Tracer().Start(ctx, s.cfg.SpanNameFormatter.Format(ctx, method, s.query),
 		trace.WithSpanKind(trace.SpanKindClient),
 		trace.WithAttributes(withDBStatement(s.cfg, s.query)...),
 	)
diff --git a/tx.go b/tx.go
index 52dd9ea..f9ca260 100644
--- a/tx.go
+++ b/tx.go
@@ -45,7 +45,7 @@ func (t *otTx) Commit() (err error) {
 	}()
 
 	var span trace.Span
-	_, span = t.cfg.Tracer.Start(t.ctx, t.cfg.SpanNameFormatter.Format(t.ctx, method, ""),
+	_, span = t.cfg.Tracer().Start(t.ctx, t.cfg.SpanNameFormatter.Format(t.ctx, method, ""),
 		trace.WithSpanKind(trace.SpanKindClient),
 		trace.WithAttributes(t.cfg.Attributes...),
 	)
@@ -67,7 +67,7 @@ func (t *otTx) Rollback() (err error) {
 	}()
 
 	var span trace.Span
-	_, span = t.cfg.Tracer.Start(t.ctx, t.cfg.SpanNameFormatter.Format(t.ctx, method, ""),
+	_, span = t.cfg.Tracer().Start(t.ctx, t.cfg.SpanNameFormatter.Format(t.ctx, method, ""),
 		trace.WithSpanKind(trace.SpanKindClient),
 		trace.WithAttributes(t.cfg.Attributes...),
 	)
diff --git a/utils_test.go b/utils_test.go
index 44091cc..9ffd60c 100644
--- a/utils_test.go
+++ b/utils_test.go
@@ -136,7 +136,7 @@ func newMockConfig(t *testing.T, tracer trace.Tracer) config {
 	require.NoError(t, err)
 
 	return config{
-		Tracer:            tracer,
+		Tracer:            func() trace.Tracer { return tracer },
 		Meter:             meter,
 		Instruments:       instruments,
 		Attributes:        []attribute.KeyValue{defaultattribute},
